[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "improved-sdd"
version = "0.1.3"
description = "Setup tool for Improved Spec-Driven Development projects with AI assistant templates and GitLab Flow integration"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["spec-driven-development", "ai", "github-copilot", "templates", "cli", "development-tools", "gitlab-flow", "git-workflow"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Utilities",
    "Environment :: Console",
]
dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
    "platformdirs>=3.0.0",
    "readchar>=4.0.0",
    "httpx>=0.24.0"
]
authors = [
    {name = "Robert Meisner", email = "robert@catchit.pl"}
]

[project.urls]
Homepage = "https://github.com/robertmeisner/improved-sdd"
Repository = "https://github.com/robertmeisner/improved-sdd"
Issues = "https://github.com/robertmeisner/improved-sdd/issues"
Documentation = "https://github.com/robertmeisner/improved-sdd#readme"

[project.optional-dependencies]
dev = [
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
    "mypy>=1.0.0",
    "safety>=2.0.0",
    "bandit[toml]>=1.7.0",
    "pip-audit>=2.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "coverage>=7.0.0"
]

[project.scripts]
improved-sdd = "src.improved_sdd_cli:main"

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "improved_sdd_cli"
ignore_errors = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config --cov=src --cov-report=term-missing --cov-report=html --cov-report=xml"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "cli: marks tests that test CLI commands",
    "templates: marks tests that involve template operations",
    "file_ops: marks tests that involve file operations",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
