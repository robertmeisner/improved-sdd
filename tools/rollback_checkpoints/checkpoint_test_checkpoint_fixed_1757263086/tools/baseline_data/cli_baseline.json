{
  "metadata": {
    "cli_path": "C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py",
    "python_version": "3.13.5 | packaged by Anaconda, Inc. | (main, Jun 12 2025, 16:37:03) [MSC v.1929 64 bit (AMD64)]",
    "timestamp": 1757260939.4122527,
    "baseline_version": "1.0"
  },
  "help_behaviors": {
    "help_no_args": {
      "command": [],
      "exit_code": 0,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\n                Run 'improved-sdd --help' for usage information                \n\n",
      "stderr": "",
      "execution_time": 0.915393590927124,
      "memory_peak_mb": 40.66015625,
      "working_directory": "C:\\Users\\Robert\\Documents\\Projects\\improved-sdd",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "help_--help": {
      "command": [
        "--help"
      ],
      "exit_code": 1,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\n                                                                               \n Usage: improved_sdd_cli.py [OPTIONS] COMMAND [ARGS]...                        \n                                                                               \n Setup AI-optimized development templates and workflows.                       \n                                                                               \n+- Options -------------------------------------------------------------------+\n| --help          Show this message and exit.                                 |\n+-----------------------------------------------------------------------------+\n+- Commands ------------------------------------------------------------------+\n| init     Install Improved-SDD templates for selected AI assistants in your  |\n|          project.                                                           |\n| delete   Delete Improved-SDD templates for a specific app type.             |\n| check    Check that all required tools are installed.                       |\n+-----------------------------------------------------------------------------+\n",
      "stderr": "+--------------------- Traceback (most recent call last) ---------------------+\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:200 |\n| 3 in <module>                                                               |\n|                                                                             |\n|   2000                                                                      |\n|   2001                                                                      |\n|   2002 if __name__ == \"__main__\":                                           |\n| > 2003     main()                                                           |\n|   2004                                                                      |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  AI_TOOLS = {                                                           | |\n| |                 'github-copilot': {                                     | |\n| |                     'name': 'GitHub Copilot',                           | |\n| |                     'description': 'GitHub Copilot in VS Code',         | |\n| |                     'template_dir': 'github',                           | |\n| |                     'file_extensions': {                                | |\n| |                         'chatmodes': '.chatmode.md',                    | |\n| |                         'instructions': '.instructions.md',             | |\n| |                         'prompts': '.prompt.md',                        | |\n| |                         'commands': '.command.md'                       | |\n| |                     },                                                  | |\n| |                     'keywords': {                                       | |\n| |                         '{AI_ASSISTANT}': 'GitHub Copilot',             | |\n| |                         '{AI_SHORTNAME}': 'Copilot',                    | |\n| |                         '{AI_COMMAND}': \"Ctrl+Shift+P \\u2192 'Chat: Open     | |\n| |             Chat'\"                                                      | |\n| |                     }                                                   | |\n| |                 },                                                      | |\n| |                 'claude': {                                             | |\n| |                     'name': 'Claude (Anthropic)',                       | |\n| |                     'description': 'Claude Code or Claude API',         | |\n| |                     'template_dir': 'claude',                           | |\n| |                     'file_extensions': {                                | |\n| |                         'chatmodes': '.claude.md',                      | |\n| |                         'instructions': '.claude.md',                   | |\n| |                         'prompts': '.claude.md',                        | |\n| |                         'commands': '.claude.md'                        | |\n| |                     },                                                  | |\n| |                     'keywords': {                                       | |\n| |                         '{AI_ASSISTANT}': 'Claude',                     | |\n| |                         '{AI_SHORTNAME}': 'Claude',                     | |\n| |                         '{AI_COMMAND}': 'Open Claude interface'         | |\n| |                     }                                                   | |\n| |                 },                                                      | |\n| |                 'cursor': {                                             | |\n| |                     'name': 'Cursor AI',                                | |\n| |                     'description': 'Cursor AI Editor',                  | |\n| |                     'template_dir': 'cursor',                           | |\n| |                     'file_extensions': {                                | |\n| |                         'chatmodes': '.cursor.md',                      | |\n| |                         'instructions': '.cursor.md',                   | |\n| |                         'prompts': '.cursor.md',                        | |\n| |                         'commands': '.cursor.md'                        | |\n| |                     },                                                  | |\n| |                     'keywords': {                                       | |\n| |                         '{AI_ASSISTANT}': 'Cursor AI',                  | |\n| |                         '{AI_SHORTNAME}': 'Cursor',                     | |\n| |                         '{AI_COMMAND}': 'Ctrl+K or Ctrl+L'              | |\n| |                     }                                                   | |\n| |                 },                                                      | |\n| |                 'gemini': {                                             | |\n| |                     'name': 'Google Gemini',                            | |\n| |                     'description': 'Google Gemini CLI or API',          | |\n| |                     'template_dir': 'gemini',                           | |\n| |                     'file_extensions': {                                | |\n| |                         'chatmodes': '.gemini.md',                      | |\n| |                         'instructions': '.gemini.md',                   | |\n| |                         'prompts': '.gemini.md',                        | |\n| |                         'commands': '.gemini.md'                        | |\n| |                     },                                                  | |\n| |                     'keywords': {                                       | |\n| |                         '{AI_ASSISTANT}': 'Google Gemini',              | |\n| |                         '{AI_SHORTNAME}': 'Gemini',                     | |\n| |                         '{AI_COMMAND}': 'Use Gemini CLI or API'         | |\n| |                     }                                                   | |\n| |                 }                                                       | |\n| |             }                                                           | |\n| |       app = <typer.main.Typer object at 0x000001EA65962A50>             | |\n| | APP_TYPES = {                                                           | |\n| |                 'mcp-server': {                                         | |\n| |                     'description': 'MCP Server - Model Context Protocol | |\n| |             server for AI integrations',                                | |\n| |                     'instruction_files': [                              | |\n| |                         'sddMcpServerDev',                              | |\n| |                         'mcpDev'                                        | |\n| |                     ]                                                   | |\n| |                 },                                                      | |\n| |                 'python-cli': {                                         | |\n| |                     'description': 'Python CLI - Command-line           | |\n| |             application using typer and rich',                          | |\n| |                     'instruction_files': [                              | |\n| |                         'sddPythonCliDev',                              | |\n| |                         'CLIPythonDev'                                  | |\n| |                     ]                                                   | |\n| |                 }                                                       | |\n| |             }                                                           | |\n| |   asyncio = <module 'asyncio' from                                      | |\n| |             'C:\\\\Users\\\\Robert\\\\anaconda3\\\\Lib\\\\asyncio\\\\__init__.py'>  | |\n| |    BANNER = '\\n. _   __  __ _____ _____    _____       _______ _____    | |\n| |             _____ _____  _____'+409                                     | |\n| |  Callable = typing.Callable                                             | |\n| |   console = <console width=79 None>                                     | |\n| |     httpx = <module 'httpx' from                                        | |\n| |             'C:\\\\Users\\\\Robert\\\\anaconda3\\\\Lib\\\\site-packages\\\\httpx\\\\\u2026 | |\n| |  Optional = typing.Optional                                             | |\n| |    shutil = <module 'shutil' from                                       | |\n| |             'C:\\\\Users\\\\Robert\\\\anaconda3\\\\Lib\\\\shutil.py'>             | |\n| |       sys = <module 'sys' (built-in)>                                   | |\n| |   TAGLINE = 'Spec-Driven Development for GitHub Copilot (soon more:     | |\n| |             Cursor, Claude, Gemini)'                                    | |\n| |  tempfile = <module 'tempfile' from                                     | |\n| |             'C:\\\\Users\\\\Robert\\\\anaconda3\\\\Lib\\\\tempfile.py'>           | |\n| |      time = <module 'time' (built-in)>                                  | |\n| |     typer = <module 'typer' from                                        | |\n| |             'C:\\\\Users\\\\Robert\\\\anaconda3\\\\Lib\\\\site-packages\\\\typer\\\\\u2026 | |\n| |   zipfile = <module 'zipfile' from                                      | |\n| |             'C:\\\\Users\\\\Robert\\\\anaconda3\\\\Lib\\\\zipfile\\\\__init__.py'>  | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:199 |\n| 9 in main                                                                   |\n|                                                                             |\n|   1996                                                                      |\n|   1997                                                                      |\n|   1998 def main():                                                          |\n| > 1999     app()                                                            |\n|   2000                                                                      |\n|   2001                                                                      |\n|   2002 if __name__ == \"__main__\":                                           |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\typer\\main.py:339 in __call__   |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\typer\\main.py:322 in __call__   |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\click\\core.py:1161 in __call__  |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\typer\\core.py:761 in main       |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\typer\\core.py:192 in _main      |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\click\\core.py:949 in            |\n| make_context                                                                |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\click\\core.py:1653 in           |\n| parse_args                                                                  |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\click\\core.py:1417 in           |\n| parse_args                                                                  |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\click\\core.py:2403 in           |\n| handle_parse_result                                                         |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\click\\core.py:2365 in           |\n| process_value                                                               |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\click\\decorators.py:550 in      |\n| show_help                                                                   |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\click\\utils.py:318 in echo      |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\encodings\\cp1252.py:19 in encode              |\n|                                                                             |\n|    16                                                                       |\n|    17 class IncrementalEncoder(codecs.IncrementalEncoder):                  |\n|    18     def encode(self, input, final=False):                             |\n| >  19         return codecs.charmap_encode(input,self.errors,encoding_table |\n|    20                                                                       |\n|    21 class IncrementalDecoder(codecs.IncrementalDecoder):                  |\n|    22     def decode(self, input, final=False):                             |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | final = False                                                           | |\n| | input = \"\\r\\n\\U0001f4a1 Tip: Use 'COMMAND --help' for detailed options and      | |\n| |         examples.\\r\\n   Example: im\"+24                                 | |\n| |  self = <encodings.cp1252.IncrementalEncoder object at                  | |\n| |         0x000001EA621A4AD0>                                             | |\n| +-------------------------------------------------------------------------+ |\n+-----------------------------------------------------------------------------+\nUnicodeEncodeError: 'charmap' codec can't encode character '\\U0001f4a1' in \nposition 2: character maps to <undefined>\n",
      "execution_time": 10.169549942016602,
      "memory_peak_mb": 45.265625,
      "working_directory": "C:\\Users\\Robert\\Documents\\Projects\\improved-sdd",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "help_-h": {
      "command": [
        "-h"
      ],
      "exit_code": 2,
      "stdout": "",
      "stderr": "Usage: improved_sdd_cli.py [OPTIONS] COMMAND [ARGS]...\nTry 'improved_sdd_cli.py --help' for help.\n+- Error ---------------------------------------------------------------------+\n| No such option: -h                                                          |\n+-----------------------------------------------------------------------------+\n",
      "execution_time": 0.9170911312103271,
      "memory_peak_mb": 42.9765625,
      "working_directory": "C:\\Users\\Robert\\Documents\\Projects\\improved-sdd",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "help_init_--help": {
      "command": [
        "init",
        "--help"
      ],
      "exit_code": 0,
      "stdout": "                                                                               \n Usage: improved_sdd_cli.py init [OPTIONS] [PROJECT_NAME]                      \n                                                                               \n Install Improved-SDD templates for selected AI assistants in your project.    \n                                                                               \n This command will: 1. Check that required tools are installed 2. Let you      \n choose your app type and AI assistant(s) 3. Install custom templates for      \n selected AI assistants 4. Set up AI-specific configurations                   \n Examples:     improved-sdd init                    # Install in current       \n directory     improved-sdd init --app-type mcp-server --ai-tools              \n github-copilot,claude     improved-sdd init my-project --new-dir   # Create   \n new directory     improved-sdd init --force            # Overwrite existing   \n files without asking     improved-sdd init --offline          # Use only      \n local/bundled templates (no GitHub download)     improved-sdd init            \n --force-download   # Force GitHub download even with local templates          \n improved-sdd init --template-repo user/repo  # Use custom GitHub repository   \n for templates                                                                 \n                                                                               \n+- Arguments -----------------------------------------------------------------+\n|   project_name      [PROJECT_NAME]  Name for your new project directory     |\n|                                     (optional, defaults to current          |\n|                                     directory)                              |\n+-----------------------------------------------------------------------------+\n+- Options -------------------------------------------------------------------+\n| --app-type                           TEXT  App type to build: mcp-server,   |\n|                                            python-cli                       |\n| --ai-tools                           TEXT  AI tools to generate templates   |\n|                                            for (comma-separated):           |\n|                                            github-copilot (others coming    |\n|                                            soon)                            |\n| --ignore-agent-tools                       Skip checks for AI agent tools   |\n| --here                  --new-dir          Install templates in current     |\n|                                            directory (default) or create    |\n|                                            new directory                    |\n|                                            [default: here]                  |\n| --force                                    Overwrite existing files without |\n|                                            asking for confirmation          |\n| --offline                                  Force offline mode - disable     |\n|                                            GitHub downloads and use only    |\n|                                            local/bundled templates          |\n| --force-download                           Force GitHub download even if    |\n|                                            local templates exist            |\n| --template-repo                      TEXT  Custom GitHub repository for     |\n|                                            templates (format: owner/repo)   |\n| --help                                     Show this message and exit.      |\n+-----------------------------------------------------------------------------+\n\n",
      "stderr": "",
      "execution_time": 0.913661003112793,
      "memory_peak_mb": 43.54296875,
      "working_directory": "C:\\Users\\Robert\\Documents\\Projects\\improved-sdd",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "help_delete_--help": {
      "command": [
        "delete",
        "--help"
      ],
      "exit_code": 0,
      "stdout": "                                                                               \n Usage: improved_sdd_cli.py delete [OPTIONS] [APP_TYPE]                        \n                                                                               \n Delete Improved-SDD templates for a specific app type.                        \n                                                                               \n This command will: 1. Identify files installed for the specified app type 2.  \n Show what will be deleted 3. Require confirmation (unless --force is used) 4. \n Delete the files                                                              \n Examples:     improved-sdd delete mcp-server     improved-sdd delete          \n python-cli --force                                                            \n                                                                               \n+- Arguments -----------------------------------------------------------------+\n|   app_type      [APP_TYPE]  App type to delete files for: mcp-server,       |\n|                             python-cli                                      |\n+-----------------------------------------------------------------------------+\n+- Options -------------------------------------------------------------------+\n| --force          Skip confirmation prompt                                   |\n| --help           Show this message and exit.                                |\n+-----------------------------------------------------------------------------+\n\n",
      "stderr": "",
      "execution_time": 0.9142904281616211,
      "memory_peak_mb": 43.0625,
      "working_directory": "C:\\Users\\Robert\\Documents\\Projects\\improved-sdd",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "help_check_--help": {
      "command": [
        "check",
        "--help"
      ],
      "exit_code": 0,
      "stdout": "                                                                               \n Usage: improved_sdd_cli.py check [OPTIONS]                                    \n                                                                               \n Check that all required tools are installed.                                  \n                                                                               \n+- Options -------------------------------------------------------------------+\n| --help          Show this message and exit.                                 |\n+-----------------------------------------------------------------------------+\n\n",
      "stderr": "",
      "execution_time": 0.9226124286651611,
      "memory_peak_mb": 43.22265625,
      "working_directory": "C:\\Users\\Robert\\Documents\\Projects\\improved-sdd",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "help_--invalid-option": {
      "command": [
        "--invalid-option"
      ],
      "exit_code": 2,
      "stdout": "",
      "stderr": "Usage: improved_sdd_cli.py [OPTIONS] COMMAND [ARGS]...\nTry 'improved_sdd_cli.py --help' for help.\n+- Error ---------------------------------------------------------------------+\n| No such option: --invalid-option                                            |\n+-----------------------------------------------------------------------------+\n",
      "execution_time": 0.9161365032196045,
      "memory_peak_mb": 42.89453125,
      "working_directory": "C:\\Users\\Robert\\Documents\\Projects\\improved-sdd",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "help_invalid-command": {
      "command": [
        "invalid-command"
      ],
      "exit_code": 2,
      "stdout": "",
      "stderr": "Usage: improved_sdd_cli.py [OPTIONS] COMMAND [ARGS]...\nTry 'improved_sdd_cli.py --help' for help.\n+- Error ---------------------------------------------------------------------+\n| No such command 'invalid-command'.                                          |\n+-----------------------------------------------------------------------------+\n",
      "execution_time": 0.9133346080780029,
      "memory_peak_mb": 42.83203125,
      "working_directory": "C:\\Users\\Robert\\Documents\\Projects\\improved-sdd",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    }
  },
  "check_behaviors": {
    "check_basic": {
      "command": [
        "check"
      ],
      "exit_code": 0,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\nChecking Improved-SDD requirements...\n\nRequired tools:\n[OK] python found\n\nAI Assistant tools (optional):\n[WARN]  claude not found\n   Install with: Install from: \nhttps://docs.anthropic.com/en/docs/claude-code/setup\n[OK] VS Code found\n   Note: GitHub Copilot availability depends on VS Code extensions\n   Open VS Code and check if Copilot extension is installed and activated\n\n[OK] Improved-SDD CLI is ready to use!\n\nMissing optional tools: Claude\nThese tools enhance the development experience but are not required.\n[OK] Continuing with available tools (CI mode)...\n",
      "stderr": "",
      "execution_time": 0.7194943428039551,
      "memory_peak_mb": 0.0,
      "working_directory": "C:\\Users\\Robert\\Documents\\Projects\\improved-sdd",
      "environment_snapshot": {
        "CI": "true"
      }
    }
  },
  "init_behaviors": {
    "init_help": {
      "command": [
        "init",
        "--help"
      ],
      "exit_code": 0,
      "stdout": "                                                                               \n Usage: improved_sdd_cli.py init [OPTIONS] [PROJECT_NAME]                      \n                                                                               \n Install Improved-SDD templates for selected AI assistants in your project.    \n                                                                               \n This command will: 1. Check that required tools are installed 2. Let you      \n choose your app type and AI assistant(s) 3. Install custom templates for      \n selected AI assistants 4. Set up AI-specific configurations                   \n Examples:     improved-sdd init                    # Install in current       \n directory     improved-sdd init --app-type mcp-server --ai-tools              \n github-copilot,claude     improved-sdd init my-project --new-dir   # Create   \n new directory     improved-sdd init --force            # Overwrite existing   \n files without asking     improved-sdd init --offline          # Use only      \n local/bundled templates (no GitHub download)     improved-sdd init            \n --force-download   # Force GitHub download even with local templates          \n improved-sdd init --template-repo user/repo  # Use custom GitHub repository   \n for templates                                                                 \n                                                                               \n+- Arguments -----------------------------------------------------------------+\n|   project_name      [PROJECT_NAME]  Name for your new project directory     |\n|                                     (optional, defaults to current          |\n|                                     directory)                              |\n+-----------------------------------------------------------------------------+\n+- Options -------------------------------------------------------------------+\n| --app-type                           TEXT  App type to build: mcp-server,   |\n|                                            python-cli                       |\n| --ai-tools                           TEXT  AI tools to generate templates   |\n|                                            for (comma-separated):           |\n|                                            github-copilot (others coming    |\n|                                            soon)                            |\n| --ignore-agent-tools                       Skip checks for AI agent tools   |\n| --here                  --new-dir          Install templates in current     |\n|                                            directory (default) or create    |\n|                                            new directory                    |\n|                                            [default: here]                  |\n| --force                                    Overwrite existing files without |\n|                                            asking for confirmation          |\n| --offline                                  Force offline mode - disable     |\n|                                            GitHub downloads and use only    |\n|                                            local/bundled templates          |\n| --force-download                           Force GitHub download even if    |\n|                                            local templates exist            |\n| --template-repo                      TEXT  Custom GitHub repository for     |\n|                                            templates (format: owner/repo)   |\n| --help                                     Show this message and exit.      |\n+-----------------------------------------------------------------------------+\n\n",
      "stderr": "",
      "execution_time": 0.9108314514160156,
      "memory_peak_mb": 43.5078125,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test_n8oq29v0",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "init_new_project_offline": {
      "command": [
        "init",
        "test-project",
        "--new-dir",
        "--force",
        "--offline",
        "--app-type",
        "python-cli",
        "--ai-tools",
        "github-copilot"
      ],
      "exit_code": 1,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\nSelected AI tools:  GitHub Copilot\n+--------------------------------------------------+\n| Install Improved-SDD Templates for AI Assistants |\n| Creating new project: test-project               |\n| App type:  python-cli                            |\n| AI tools:  GitHub Copilot                        |\n+--------------------------------------------------+\n\nInstalling templates...\n",
      "stderr": "+--------------------- Traceback (most recent call last) ---------------------+\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:176 |\n| 7 in init                                                                   |\n|                                                                             |\n|   1764         if not here and project_name:                                |\n|   1765             project_path.mkdir(parents=True, exist_ok=True)          |\n|   1766             file_tracker.track_dir_creation(Path(project_name))      |\n| > 1767         create_project_structure(project_path, selected_app_type, se |\n|   1768         console.print(\"[green][OK][/green] Templates installed\")     |\n|   1769                                                                      |\n|   1770         # Configure AI assistants                                    |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |           ai_tools = 'github-copilot'                                   | |\n| |   ai_tools_display = 'GitHub Copilot'                                   | |\n| |           app_type = 'python-cli'                                       | |\n| |       file_tracker = <__main__.FileTracker object at                    | |\n| |                      0x00000230FB483A10>                                | |\n| |              force = True                                               | |\n| |     force_download = False                                              | |\n| |               here = False                                              | |\n| | ignore_agent_tools = False                                              | |\n| |      invalid_tools = []                                                 | |\n| |            offline = True                                               | |\n| |       project_name = 'test-project'                                     | |\n| |       project_path = WindowsPath('C:/Users/Robert/AppData/Local/Temp/b\u2026 | |\n| |  selected_ai_tools = ['github-copilot']                                 | |\n| |  selected_app_type = 'python-cli'                                       | |\n| |      template_repo = None                                               | |\n| |         tool_names = ['GitHub Copilot']                                 | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:143 |\n| 2 in create_project_structure                                               |\n|                                                                             |\n|   1429                                                                      |\n|   1430     # Use TemplateResolver for priority-based template resolution wi |\n|   1431     resolver = TemplateResolver(project_path, offline=offline, force |\n| > 1432     resolution_result = resolver.resolve_templates_with_transparency |\n|   1433                                                                      |\n|   1434     if not resolution_result.success:                                |\n|   1435         console.print(\"[red]\\u2717 No templates found from any source[/re |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |       ai_tools = ['github-copilot']                                     | |\n| |       app_type = 'python-cli'                                           | |\n| |   file_tracker = <__main__.FileTracker object at 0x00000230FB483A10>    | |\n| |          force = True                                                   | |\n| | force_download = False                                                  | |\n| |        offline = True                                                   | |\n| |   project_path = WindowsPath('C:/Users/Robert/AppData/Local/Temp/basel\u2026 | |\n| |       resolver = <__main__.TemplateResolver object at                   | |\n| |                  0x00000230FB483B60>                                    | |\n| |  template_repo = None                                                   | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:123 |\n| 8 in resolve_templates_with_transparency                                    |\n|                                                                             |\n|   1235                 source_type=TemplateSourceType.BUNDLED,              |\n|   1236                 size_bytes=self._get_directory_size(bundled_path),   |\n|   1237             )                                                        |\n| > 1238             console.print(f\"[cyan]\\u2139 Using bundled templates from {bu |\n|   1239             return TemplateResolutionResult(                         |\n|   1240                 source=source,                                       |\n|   1241                 success=True,                                        |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | bundled_path = WindowsPath('C:/Users/Robert/Documents/Projects/improve\u2026 | |\n| |   local_path = None                                                     | |\n| |         self = <__main__.TemplateResolver object at 0x00000230FB483B60> | |\n| |       source = TemplateSource(                                          | |\n| |                    path=WindowsPath('C:/Users/Robert/Documents/Project\u2026 | |\n| |                    source_type=<TemplateSourceType.BUNDLED: 'bundled'>, | |\n| |                    size_bytes=126699                                    | |\n| |                )                                                        | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:1678 in print   |\n|                                                                             |\n|   1675                 overflow = \"ignore\"                                  |\n|   1676             crop = False                                             |\n|   1677         render_hooks = self._render_hooks[:]                         |\n| > 1678         with self:                                                   |\n|   1679             renderables = self._collect_renderables(                 |\n|   1680                 objects,                                             |\n|   1681                 sep,                                                 |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer_extend = <built-in method extend of list object at              | |\n| |                  0x00000230FB50DC00>                                    | |\n| |           crop = True                                                   | |\n| |          emoji = None                                                   | |\n| |            end = '\\n'                                                   | |\n| |         extend = <built-in method extend of list object at              | |\n| |                  0x00000230FB5518C0>                                    | |\n| |         height = None                                                   | |\n| |      highlight = None                                                   | |\n| |        justify = None                                                   | |\n| |           line = [                                                      | |\n| |                      Segment(                                           | |\n| |                          'C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\impr\u2026 | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'cyan',                                | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=6                               | |\n| |                              )                                          | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |         markup = None                                                   | |\n| | new_line_start = False                                                  | |\n| |   new_segments = [                                                      | |\n| |                      Segment(                                           | |\n| |                          '\\u2139 Using bundled templates from ',             | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'cyan',                                | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=6                               | |\n| |                              )                                          | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment('\\n', Style()),                            | |\n| |                      Segment(                                           | |\n| |                          'C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\impr\u2026 | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'cyan',                                | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=6                               | |\n| |                              )                                          | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |        no_wrap = None                                                   | |\n| |        objects = (                                                      | |\n| |                      '[cyan]\\u2139 Using bundled templates from              | |\n| |                  C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\improved'+26,  | |\n| |                  )                                                      | |\n| |       overflow = None                                                   | |\n| |         render = <bound method Console.render of <console width=79      | |\n| |                  None>>                                                 | |\n| |   render_hooks = []                                                     | |\n| | render_options = ConsoleOptions(                                        | |\n| |                      size=ConsoleDimensions(width=79, height=25),       | |\n| |                      legacy_windows=True,                               | |\n| |                      min_width=1,                                       | |\n| |                      max_width=79,                                      | |\n| |                      is_terminal=False,                                 | |\n| |                      encoding='cp1252',                                 | |\n| |                      max_height=25,                                     | |\n| |                      justify=None,                                      | |\n| |                      overflow=None,                                     | |\n| |                      no_wrap=None,                                      | |\n| |                      highlight=None,                                    | |\n| |                      markup=None,                                       | |\n| |                      height=None                                        | |\n| |                  )                                                      | |\n| |     renderable = <text '\\u2139 Using bundled templates from                  | |\n| |                  C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\improved-sdd\\\u2026 | |\n| |                  [Span(0, 93, 'cyan')] ''>                              | |\n| |    renderables = [                                                      | |\n| |                      <text '\\u2139 Using bundled templates from              | |\n| |                  C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\improved-sdd\\\u2026 | |\n| |                  [Span(0, 93, 'cyan')] ''>                              | |\n| |                  ]                                                      | |\n| |           self = <console width=79 None>                                | |\n| |            sep = ' '                                                    | |\n| |      soft_wrap = False                                                  | |\n| |          style = None                                                   | |\n| |          width = None                                                   | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:864 in __exit__ |\n|                                                                             |\n|    861                                                                      |\n|    862     def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any |\n|    863         \"\"\"Exit buffer context.\"\"\"                                   |\n| >  864         self._exit_buffer()                                          |\n|    865                                                                      |\n|    866     def begin_capture(self) -> None:                                 |\n|    867         \"\"\"Begin capturing console output. Call :meth:`end_capture`  |\n|                                                                             |\n| +-------------- locals ---------------+                                     |\n| |  exc_type = None                    |                                     |\n| | exc_value = None                    |                                     |\n| |      self = <console width=79 None> |                                     |\n| | traceback = None                    |                                     |\n| +-------------------------------------+                                     |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:822 in          |\n| _exit_buffer                                                                |\n|                                                                             |\n|    819     def _exit_buffer(self) -> None:                                  |\n|    820         \"\"\"Leave buffer context, and render content if required.\"\"\"  |\n|    821         self._buffer_index -= 1                                      |\n| >  822         self._check_buffer()                                         |\n|    823                                                                      |\n|    824     def set_live(self, live: \"Live\") -> None:                        |\n|    825         \"\"\"Set Live instance. Used by Live context manager.          |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2019 in         |\n| _check_buffer                                                               |\n|                                                                             |\n|   2016             return                                                   |\n|   2017                                                                      |\n|   2018         try:                                                         |\n| > 2019             self._write_buffer()                                     |\n|   2020         except BrokenPipeError:                                      |\n|   2021             self.on_broken_pipe()                                    |\n|   2022                                                                      |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2055 in         |\n| _write_buffer                                                               |\n|                                                                             |\n|   2052                             if self.no_color and self._color_system: |\n|   2053                                 buffer = list(Segment.remove_color(b |\n|   2054                                                                      |\n| > 2055                             legacy_windows_render(buffer, LegacyWind |\n|   2056                         else:                                        |\n|   2057                             # Either a non-std stream on legacy Wind |\n|   2058                             text = self._render_buffer(self._buffer[ |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |                    buffer = [                                           | |\n| |                                 Segment(                                | |\n| |                                     '\\u2139 Using bundled templates from ',  | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'cyan',                     | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=6                    | |\n| |                                         )                               | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment('\\n'),                          | |\n| |                                 Segment(                                | |\n| |                                     'C:\\\\Users\\\\Robert\\\\Documents\\\\Pro\u2026 | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'cyan',                     | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=6                    | |\n| |                                         )                               | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment('\\n')                           | |\n| |                             ]                                           | |\n| |                    fileno = 1                                           | |\n| |                      self = <console width=79 None>                     | |\n| | use_legacy_windows_render = True                                        | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_windows_renderer.py:17 in |\n| legacy_windows_render                                                       |\n|                                                                             |\n|   14     for text, style, control in buffer:                                |\n|   15         if not control:                                                |\n|   16             if style:                                                  |\n| > 17                 term.write_styled(text, style)                         |\n|   18             else:                                                      |\n|   19                 term.write_text(text)                                  |\n|   20         else:                                                          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer = [                                                             | |\n| |               Segment(                                                  | |\n| |                   '\\u2139 Using bundled templates from ',                    | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'cyan',                                       | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=6                                      | |\n| |                       )                                                 | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment('\\n'),                                            | |\n| |               Segment(                                                  | |\n| |                   'C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\improved-sd\u2026 | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'cyan',                                       | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=6                                      | |\n| |                       )                                                 | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment('\\n')                                             | |\n| |           ]                                                             | |\n| | control = None                                                          | |\n| |   style = Style(color=Color('cyan', ColorType.STANDARD, number=6))      | |\n| |    term = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x00000230FB520D70>                                           | |\n| |    text = '\\u2139 Using bundled templates from '                             | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_win32_console.py:441 in   |\n| write_styled                                                                |\n|                                                                             |\n|   438         SetConsoleTextAttribute(                                      |\n|   439             self._handle, attributes=ctypes.c_ushort(fore | (back <<  |\n|   440         )                                                             |\n| > 441         self.write_text(text)                                         |\n|   442         SetConsoleTextAttribute(self._handle, attributes=self._defaul |\n|   443                                                                       |\n|   444     def move_cursor_to(self, new_position: WindowsCoordinates) -> Non |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |    back = 0                                                             | |\n| | bgcolor = None                                                          | |\n| |   color = Color('cyan', ColorType.STANDARD, number=6)                   | |\n| |    fore = 3                                                             | |\n| |    self = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x00000230FB520D70>                                           | |\n| |   style = Style(color=Color('cyan', ColorType.STANDARD, number=6))      | |\n| |    text = '\\u2139 Using bundled templates from '                             | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_win32_console.py:402 in   |\n| write_text                                                                  |\n|                                                                             |\n|   399         Args:                                                         |\n|   400             text (str): The text to write to the console              |\n|   401         \"\"\"                                                           |\n| > 402         self.write(text)                                              |\n|   403         self.flush()                                                  |\n|   404                                                                       |\n|   405     def write_styled(self, text: str, style: Style) -> None:          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | self = <rich._win32_console.LegacyWindowsTerm object at                 | |\n| |        0x00000230FB520D70>                                              | |\n| | text = '\\u2139 Using bundled templates from '                                | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\encodings\\cp1252.py:19 in encode              |\n|                                                                             |\n|    16                                                                       |\n|    17 class IncrementalEncoder(codecs.IncrementalEncoder):                  |\n|    18     def encode(self, input, final=False):                             |\n| >  19         return codecs.charmap_encode(input,self.errors,encoding_table |\n|    20                                                                       |\n|    21 class IncrementalDecoder(codecs.IncrementalDecoder):                  |\n|    22     def decode(self, input, final=False):                             |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | final = False                                                           | |\n| | input = '\\u2139 Using bundled templates from '                               | |\n| |  self = <encodings.cp1252.IncrementalEncoder object at                  | |\n| |         0x00000230F7CC4AD0>                                             | |\n| +-------------------------------------------------------------------------+ |\n+-----------------------------------------------------------------------------+\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u2139' in position\n0: character maps to <undefined>\n\nDuring handling of the above exception, another exception occurred:\n\n+--------------------- Traceback (most recent call last) ---------------------+\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:177 |\n| 8 in init                                                                   |\n|                                                                             |\n|   1775         console.print(\"[green][OK][/green] Setup complete\")          |\n|   1776                                                                      |\n|   1777     except Exception as e:                                           |\n| > 1778         console.print(f\"[red][ERROR][/red] Error: {e}\")              |\n|   1779         if not here and project_name and project_path.exists():      |\n|   1780             shutil.rmtree(project_path)                              |\n|   1781         raise typer.Exit(1)                                          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |           ai_tools = 'github-copilot'                                   | |\n| |   ai_tools_display = 'GitHub Copilot'                                   | |\n| |           app_type = 'python-cli'                                       | |\n| |       file_tracker = <__main__.FileTracker object at                    | |\n| |                      0x00000230FB483A10>                                | |\n| |              force = True                                               | |\n| |     force_download = False                                              | |\n| |               here = False                                              | |\n| | ignore_agent_tools = False                                              | |\n| |      invalid_tools = []                                                 | |\n| |            offline = True                                               | |\n| |       project_name = 'test-project'                                     | |\n| |       project_path = WindowsPath('C:/Users/Robert/AppData/Local/Temp/b\u2026 | |\n| |  selected_ai_tools = ['github-copilot']                                 | |\n| |  selected_app_type = 'python-cli'                                       | |\n| |      template_repo = None                                               | |\n| |         tool_names = ['GitHub Copilot']                                 | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:1678 in print   |\n|                                                                             |\n|   1675                 overflow = \"ignore\"                                  |\n|   1676             crop = False                                             |\n|   1677         render_hooks = self._render_hooks[:]                         |\n| > 1678         with self:                                                   |\n|   1679             renderables = self._collect_renderables(                 |\n|   1680                 objects,                                             |\n|   1681                 sep,                                                 |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer_extend = <built-in method extend of list object at              | |\n| |                  0x00000230FB50DC00>                                    | |\n| |           crop = True                                                   | |\n| |          emoji = None                                                   | |\n| |            end = '\\n'                                                   | |\n| |         extend = <built-in method extend of list object at              | |\n| |                  0x00000230FB551F80>                                    | |\n| |         height = None                                                   | |\n| |      highlight = None                                                   | |\n| |        justify = None                                                   | |\n| |           line = [                                                      | |\n| |                      Segment('character maps to ', Style()),            | |\n| |                      Segment('<', Style(bold=True)),                    | |\n| |                      Segment(                                           | |\n| |                          'undefined',                                   | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'bright_magenta',                      | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=13                              | |\n| |                              ),                                         | |\n| |                              bold=True                                  | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment('>', Style(bold=True)),                    | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |         markup = None                                                   | |\n| | new_line_start = False                                                  | |\n| |   new_segments = [                                                      | |\n| |                      Segment(                                           | |\n| |                          '[',                                           | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'red',                                 | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=1                               | |\n| |                              ),                                         | |\n| |                              bold=True                                  | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(                                           | |\n| |                          'ERROR',                                       | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'red',                                 | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=1                               | |\n| |                              )                                          | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(                                           | |\n| |                          ']',                                           | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'red',                                 | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=1                               | |\n| |                              ),                                         | |\n| |                              bold=True                                  | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(' Error: ', Style()),                      | |\n| |                      Segment(                                           | |\n| |                          \"'charmap'\",                                   | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'green',                               | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=2                               | |\n| |                              ),                                         | |\n| |                              bold=False,                                | |\n| |                              italic=False                               | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(                                           | |\n| |                          \" codec can't encode character \",              | |\n| |                          Style()                                        | |\n| |                      ),                                                 | |\n| |                      Segment(                                           | |\n| |                          \"'\\\\u2139'\",                                   | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'green',                               | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=2                               | |\n| |                              ),                                         | |\n| |                              bold=False,                                | |\n| |                              italic=False                               | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(' in position ', Style()),                 | |\n| |                      Segment(                                           | |\n| |                          '0',                                           | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'cyan',                                | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=6                               | |\n| |                              ),                                         | |\n| |                              bold=True,                                 | |\n| |                              italic=False                               | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(': \\ncharacter maps to ', Style()),        | |\n| |                      ... +4                                             | |\n| |                  ]                                                      | |\n| |        no_wrap = None                                                   | |\n| |        objects = (                                                      | |\n| |                      \"[red][ERROR][/red] Error: 'charmap' codec can't   | |\n| |                  encode character '\\\\u2139' in pos\"+38,                 | |\n| |                  )                                                      | |\n| |       overflow = None                                                   | |\n| |         render = <bound method Console.render of <console width=79      | |\n| |                  None>>                                                 | |\n| |   render_hooks = []                                                     | |\n| | render_options = ConsoleOptions(                                        | |\n| |                      size=ConsoleDimensions(width=79, height=25),       | |\n| |                      legacy_windows=True,                               | |\n| |                      min_width=1,                                       | |\n| |                      max_width=79,                                      | |\n| |                      is_terminal=False,                                 | |\n| |                      encoding='cp1252',                                 | |\n| |                      max_height=25,                                     | |\n| |                      justify=None,                                      | |\n| |                      overflow=None,                                     | |\n| |                      no_wrap=None,                                      | |\n| |                      highlight=None,                                    | |\n| |                      markup=None,                                       | |\n| |                      height=None                                        | |\n| |                  )                                                      | |\n| |     renderable = <text \"[ERROR] Error: 'charmap' codec can't encode     | |\n| |                  character '\\\\u2139' in position 0: character maps to   | |\n| |                  <undefined>\" [Span(96, 97, 'repr.tag_start'), Span(97, | |\n| |                  106, 'repr.tag_name'), Span(106, 107, 'repr.tag_end'), | |\n| |                  Span(0, 1, 'repr.brace'), Span(6, 7, 'repr.brace'),    | |\n| |                  Span(15, 24, 'repr.str'), Span(54, 62, 'repr.str'),    | |\n| |                  Span(75, 76, 'repr.number'), Span(0, 7, 'red')] ''>    | |\n| |    renderables = [                                                      | |\n| |                      <text \"[ERROR] Error: 'charmap' codec can't encode | |\n| |                  character '\\\\u2139' in position 0: character maps to   | |\n| |                  <undefined>\" [Span(96, 97, 'repr.tag_start'), Span(97, | |\n| |                  106, 'repr.tag_name'), Span(106, 107, 'repr.tag_end'), | |\n| |                  Span(0, 1, 'repr.brace'), Span(6, 7, 'repr.brace'),    | |\n| |                  Span(15, 24, 'repr.str'), Span(54, 62, 'repr.str'),    | |\n| |                  Span(75, 76, 'repr.number'), Span(0, 7, 'red')] ''>    | |\n| |                  ]                                                      | |\n| |           self = <console width=79 None>                                | |\n| |            sep = ' '                                                    | |\n| |      soft_wrap = False                                                  | |\n| |          style = None                                                   | |\n| |          width = None                                                   | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:864 in __exit__ |\n|                                                                             |\n|    861                                                                      |\n|    862     def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any |\n|    863         \"\"\"Exit buffer context.\"\"\"                                   |\n| >  864         self._exit_buffer()                                          |\n|    865                                                                      |\n|    866     def begin_capture(self) -> None:                                 |\n|    867         \"\"\"Begin capturing console output. Call :meth:`end_capture`  |\n|                                                                             |\n| +-------------- locals ---------------+                                     |\n| |  exc_type = None                    |                                     |\n| | exc_value = None                    |                                     |\n| |      self = <console width=79 None> |                                     |\n| | traceback = None                    |                                     |\n| +-------------------------------------+                                     |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:822 in          |\n| _exit_buffer                                                                |\n|                                                                             |\n|    819     def _exit_buffer(self) -> None:                                  |\n|    820         \"\"\"Leave buffer context, and render content if required.\"\"\"  |\n|    821         self._buffer_index -= 1                                      |\n| >  822         self._check_buffer()                                         |\n|    823                                                                      |\n|    824     def set_live(self, live: \"Live\") -> None:                        |\n|    825         \"\"\"Set Live instance. Used by Live context manager.          |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2019 in         |\n| _check_buffer                                                               |\n|                                                                             |\n|   2016             return                                                   |\n|   2017                                                                      |\n|   2018         try:                                                         |\n| > 2019             self._write_buffer()                                     |\n|   2020         except BrokenPipeError:                                      |\n|   2021             self.on_broken_pipe()                                    |\n|   2022                                                                      |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2055 in         |\n| _write_buffer                                                               |\n|                                                                             |\n|   2052                             if self.no_color and self._color_system: |\n|   2053                                 buffer = list(Segment.remove_color(b |\n|   2054                                                                      |\n| > 2055                             legacy_windows_render(buffer, LegacyWind |\n|   2056                         else:                                        |\n|   2057                             # Either a non-std stream on legacy Wind |\n|   2058                             text = self._render_buffer(self._buffer[ |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |                    buffer = [                                           | |\n| |                                 Segment(                                | |\n| |                                     '\\u2139 Using bundled templates from ',  | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'cyan',                     | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=6                    | |\n| |                                         )                               | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment('\\n'),                          | |\n| |                                 Segment(                                | |\n| |                                     'C:\\\\Users\\\\Robert\\\\Documents\\\\Pro\u2026 | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'cyan',                     | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=6                    | |\n| |                                         )                               | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment('\\n'),                          | |\n| |                                 Segment(                                | |\n| |                                     '[',                                | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'red',                      | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=1                    | |\n| |                                         ),                              | |\n| |                                         bold=True                       | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment(                                | |\n| |                                     'ERROR',                            | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'red',                      | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=1                    | |\n| |                                         )                               | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment(                                | |\n| |                                     ']',                                | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'red',                      | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=1                    | |\n| |                                         ),                              | |\n| |                                         bold=True                       | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment(' Error: ', Style()),           | |\n| |                                 Segment(                                | |\n| |                                     \"'charmap'\",                        | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'green',                    | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=2                    | |\n| |                                         ),                              | |\n| |                                         bold=False,                     | |\n| |                                         italic=False                    | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment(                                | |\n| |                                     \" codec can't encode character \",   | |\n| |                                     Style()                             | |\n| |                                 ),                                      | |\n| |                                 ... +10                                 | |\n| |                             ]                                           | |\n| |                    fileno = 1                                           | |\n| |                      self = <console width=79 None>                     | |\n| | use_legacy_windows_render = True                                        | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_windows_renderer.py:17 in |\n| legacy_windows_render                                                       |\n|                                                                             |\n|   14     for text, style, control in buffer:                                |\n|   15         if not control:                                                |\n|   16             if style:                                                  |\n| > 17                 term.write_styled(text, style)                         |\n|   18             else:                                                      |\n|   19                 term.write_text(text)                                  |\n|   20         else:                                                          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer = [                                                             | |\n| |               Segment(                                                  | |\n| |                   '\\u2139 Using bundled templates from ',                    | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'cyan',                                       | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=6                                      | |\n| |                       )                                                 | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment('\\n'),                                            | |\n| |               Segment(                                                  | |\n| |                   'C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\improved-sd\u2026 | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'cyan',                                       | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=6                                      | |\n| |                       )                                                 | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment('\\n'),                                            | |\n| |               Segment(                                                  | |\n| |                   '[',                                                  | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'red',                                        | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=1                                      | |\n| |                       ),                                                | |\n| |                       bold=True                                         | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment(                                                  | |\n| |                   'ERROR',                                              | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'red',                                        | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=1                                      | |\n| |                       )                                                 | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment(                                                  | |\n| |                   ']',                                                  | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'red',                                        | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=1                                      | |\n| |                       ),                                                | |\n| |                       bold=True                                         | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment(' Error: ', Style()),                             | |\n| |               Segment(                                                  | |\n| |                   \"'charmap'\",                                          | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'green',                                      | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=2                                      | |\n| |                       ),                                                | |\n| |                       bold=False,                                       | |\n| |                       italic=False                                      | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment(\" codec can't encode character \", Style()),       | |\n| |               ... +10                                                   | |\n| |           ]                                                             | |\n| | control = None                                                          | |\n| |   style = Style(color=Color('cyan', ColorType.STANDARD, number=6))      | |\n| |    term = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x00000230FB5204B0>                                           | |\n| |    text = '\\u2139 Using bundled templates from '                             | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_win32_console.py:441 in   |\n| write_styled                                                                |\n|                                                                             |\n|   438         SetConsoleTextAttribute(                                      |\n|   439             self._handle, attributes=ctypes.c_ushort(fore | (back <<  |\n|   440         )                                                             |\n| > 441         self.write_text(text)                                         |\n|   442         SetConsoleTextAttribute(self._handle, attributes=self._defaul |\n|   443                                                                       |\n|   444     def move_cursor_to(self, new_position: WindowsCoordinates) -> Non |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |    back = 0                                                             | |\n| | bgcolor = None                                                          | |\n| |   color = Color('cyan', ColorType.STANDARD, number=6)                   | |\n| |    fore = 3                                                             | |\n| |    self = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x00000230FB5204B0>                                           | |\n| |   style = Style(color=Color('cyan', ColorType.STANDARD, number=6))      | |\n| |    text = '\\u2139 Using bundled templates from '                             | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_win32_console.py:402 in   |\n| write_text                                                                  |\n|                                                                             |\n|   399         Args:                                                         |\n|   400             text (str): The text to write to the console              |\n|   401         \"\"\"                                                           |\n| > 402         self.write(text)                                              |\n|   403         self.flush()                                                  |\n|   404                                                                       |\n|   405     def write_styled(self, text: str, style: Style) -> None:          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | self = <rich._win32_console.LegacyWindowsTerm object at                 | |\n| |        0x00000230FB5204B0>                                              | |\n| | text = '\\u2139 Using bundled templates from '                                | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\encodings\\cp1252.py:19 in encode              |\n|                                                                             |\n|    16                                                                       |\n|    17 class IncrementalEncoder(codecs.IncrementalEncoder):                  |\n|    18     def encode(self, input, final=False):                             |\n| >  19         return codecs.charmap_encode(input,self.errors,encoding_table |\n|    20                                                                       |\n|    21 class IncrementalDecoder(codecs.IncrementalDecoder):                  |\n|    22     def decode(self, input, final=False):                             |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | final = False                                                           | |\n| | input = '\\u2139 Using bundled templates from '                               | |\n| |  self = <encodings.cp1252.IncrementalEncoder object at                  | |\n| |         0x00000230F7CC4AD0>                                             | |\n| +-------------------------------------------------------------------------+ |\n+-----------------------------------------------------------------------------+\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u2139' in position\n0: character maps to <undefined>\n",
      "execution_time": 30.335376977920532,
      "memory_peak_mb": 48.94921875,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test_296tpme_",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "init_here_offline": {
      "command": [
        "init",
        "--here",
        "--force",
        "--offline",
        "--app-type",
        "mcp-server",
        "--ai-tools",
        "github-copilot"
      ],
      "exit_code": 1,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\nSelected AI tools:  GitHub Copilot\n+-----------------------------------------------------------------+\n| Install Improved-SDD Templates for AI Assistants                |\n| Installing in current directory: baseline_test_z1xzshh2         |\n| Path: C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test_z1xzshh2 |\n| App type:  mcp-server                                           |\n| AI tools:  GitHub Copilot                                       |\n+-----------------------------------------------------------------+\n\nInstalling templates...\n",
      "stderr": "+--------------------- Traceback (most recent call last) ---------------------+\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:176 |\n| 7 in init                                                                   |\n|                                                                             |\n|   1764         if not here and project_name:                                |\n|   1765             project_path.mkdir(parents=True, exist_ok=True)          |\n|   1766             file_tracker.track_dir_creation(Path(project_name))      |\n| > 1767         create_project_structure(project_path, selected_app_type, se |\n|   1768         console.print(\"[green][OK][/green] Templates installed\")     |\n|   1769                                                                      |\n|   1770         # Configure AI assistants                                    |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |           ai_tools = 'github-copilot'                                   | |\n| |   ai_tools_display = 'GitHub Copilot'                                   | |\n| |           app_type = 'mcp-server'                                       | |\n| |     existing_items = []                                                 | |\n| |       file_tracker = <__main__.FileTracker object at                    | |\n| |                      0x0000017D20473A10>                                | |\n| |              force = True                                               | |\n| |     force_download = False                                              | |\n| |               here = True                                               | |\n| | ignore_agent_tools = False                                              | |\n| |      invalid_tools = []                                                 | |\n| |            offline = True                                               | |\n| |       project_name = 'baseline_test_z1xzshh2'                           | |\n| |       project_path = WindowsPath('C:/Users/Robert/AppData/Local/Temp/b\u2026 | |\n| |  selected_ai_tools = ['github-copilot']                                 | |\n| |  selected_app_type = 'mcp-server'                                       | |\n| |      template_repo = None                                               | |\n| |         tool_names = ['GitHub Copilot']                                 | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:143 |\n| 2 in create_project_structure                                               |\n|                                                                             |\n|   1429                                                                      |\n|   1430     # Use TemplateResolver for priority-based template resolution wi |\n|   1431     resolver = TemplateResolver(project_path, offline=offline, force |\n| > 1432     resolution_result = resolver.resolve_templates_with_transparency |\n|   1433                                                                      |\n|   1434     if not resolution_result.success:                                |\n|   1435         console.print(\"[red]\\u2717 No templates found from any source[/re |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |       ai_tools = ['github-copilot']                                     | |\n| |       app_type = 'mcp-server'                                           | |\n| |   file_tracker = <__main__.FileTracker object at 0x0000017D20473A10>    | |\n| |          force = True                                                   | |\n| | force_download = False                                                  | |\n| |        offline = True                                                   | |\n| |   project_path = WindowsPath('C:/Users/Robert/AppData/Local/Temp/basel\u2026 | |\n| |       resolver = <__main__.TemplateResolver object at                   | |\n| |                  0x0000017D20473B60>                                    | |\n| |  template_repo = None                                                   | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:123 |\n| 8 in resolve_templates_with_transparency                                    |\n|                                                                             |\n|   1235                 source_type=TemplateSourceType.BUNDLED,              |\n|   1236                 size_bytes=self._get_directory_size(bundled_path),   |\n|   1237             )                                                        |\n| > 1238             console.print(f\"[cyan]\\u2139 Using bundled templates from {bu |\n|   1239             return TemplateResolutionResult(                         |\n|   1240                 source=source,                                       |\n|   1241                 success=True,                                        |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | bundled_path = WindowsPath('C:/Users/Robert/Documents/Projects/improve\u2026 | |\n| |   local_path = None                                                     | |\n| |         self = <__main__.TemplateResolver object at 0x0000017D20473B60> | |\n| |       source = TemplateSource(                                          | |\n| |                    path=WindowsPath('C:/Users/Robert/Documents/Project\u2026 | |\n| |                    source_type=<TemplateSourceType.BUNDLED: 'bundled'>, | |\n| |                    size_bytes=126699                                    | |\n| |                )                                                        | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:1678 in print   |\n|                                                                             |\n|   1675                 overflow = \"ignore\"                                  |\n|   1676             crop = False                                             |\n|   1677         render_hooks = self._render_hooks[:]                         |\n| > 1678         with self:                                                   |\n|   1679             renderables = self._collect_renderables(                 |\n|   1680                 objects,                                             |\n|   1681                 sep,                                                 |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer_extend = <built-in method extend of list object at              | |\n| |                  0x0000017D203E7380>                                    | |\n| |           crop = True                                                   | |\n| |          emoji = None                                                   | |\n| |            end = '\\n'                                                   | |\n| |         extend = <built-in method extend of list object at              | |\n| |                  0x0000017D20542880>                                    | |\n| |         height = None                                                   | |\n| |      highlight = None                                                   | |\n| |        justify = None                                                   | |\n| |           line = [                                                      | |\n| |                      Segment(                                           | |\n| |                          'C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\impr\u2026 | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'cyan',                                | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=6                               | |\n| |                              )                                          | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |         markup = None                                                   | |\n| | new_line_start = False                                                  | |\n| |   new_segments = [                                                      | |\n| |                      Segment(                                           | |\n| |                          '\\u2139 Using bundled templates from ',             | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'cyan',                                | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=6                               | |\n| |                              )                                          | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment('\\n', Style()),                            | |\n| |                      Segment(                                           | |\n| |                          'C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\impr\u2026 | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'cyan',                                | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=6                               | |\n| |                              )                                          | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |        no_wrap = None                                                   | |\n| |        objects = (                                                      | |\n| |                      '[cyan]\\u2139 Using bundled templates from              | |\n| |                  C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\improved'+26,  | |\n| |                  )                                                      | |\n| |       overflow = None                                                   | |\n| |         render = <bound method Console.render of <console width=79      | |\n| |                  None>>                                                 | |\n| |   render_hooks = []                                                     | |\n| | render_options = ConsoleOptions(                                        | |\n| |                      size=ConsoleDimensions(width=79, height=25),       | |\n| |                      legacy_windows=True,                               | |\n| |                      min_width=1,                                       | |\n| |                      max_width=79,                                      | |\n| |                      is_terminal=False,                                 | |\n| |                      encoding='cp1252',                                 | |\n| |                      max_height=25,                                     | |\n| |                      justify=None,                                      | |\n| |                      overflow=None,                                     | |\n| |                      no_wrap=None,                                      | |\n| |                      highlight=None,                                    | |\n| |                      markup=None,                                       | |\n| |                      height=None                                        | |\n| |                  )                                                      | |\n| |     renderable = <text '\\u2139 Using bundled templates from                  | |\n| |                  C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\improved-sdd\\\u2026 | |\n| |                  [Span(0, 93, 'cyan')] ''>                              | |\n| |    renderables = [                                                      | |\n| |                      <text '\\u2139 Using bundled templates from              | |\n| |                  C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\improved-sdd\\\u2026 | |\n| |                  [Span(0, 93, 'cyan')] ''>                              | |\n| |                  ]                                                      | |\n| |           self = <console width=79 None>                                | |\n| |            sep = ' '                                                    | |\n| |      soft_wrap = False                                                  | |\n| |          style = None                                                   | |\n| |          width = None                                                   | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:864 in __exit__ |\n|                                                                             |\n|    861                                                                      |\n|    862     def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any |\n|    863         \"\"\"Exit buffer context.\"\"\"                                   |\n| >  864         self._exit_buffer()                                          |\n|    865                                                                      |\n|    866     def begin_capture(self) -> None:                                 |\n|    867         \"\"\"Begin capturing console output. Call :meth:`end_capture`  |\n|                                                                             |\n| +-------------- locals ---------------+                                     |\n| |  exc_type = None                    |                                     |\n| | exc_value = None                    |                                     |\n| |      self = <console width=79 None> |                                     |\n| | traceback = None                    |                                     |\n| +-------------------------------------+                                     |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:822 in          |\n| _exit_buffer                                                                |\n|                                                                             |\n|    819     def _exit_buffer(self) -> None:                                  |\n|    820         \"\"\"Leave buffer context, and render content if required.\"\"\"  |\n|    821         self._buffer_index -= 1                                      |\n| >  822         self._check_buffer()                                         |\n|    823                                                                      |\n|    824     def set_live(self, live: \"Live\") -> None:                        |\n|    825         \"\"\"Set Live instance. Used by Live context manager.          |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2019 in         |\n| _check_buffer                                                               |\n|                                                                             |\n|   2016             return                                                   |\n|   2017                                                                      |\n|   2018         try:                                                         |\n| > 2019             self._write_buffer()                                     |\n|   2020         except BrokenPipeError:                                      |\n|   2021             self.on_broken_pipe()                                    |\n|   2022                                                                      |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2055 in         |\n| _write_buffer                                                               |\n|                                                                             |\n|   2052                             if self.no_color and self._color_system: |\n|   2053                                 buffer = list(Segment.remove_color(b |\n|   2054                                                                      |\n| > 2055                             legacy_windows_render(buffer, LegacyWind |\n|   2056                         else:                                        |\n|   2057                             # Either a non-std stream on legacy Wind |\n|   2058                             text = self._render_buffer(self._buffer[ |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |                    buffer = [                                           | |\n| |                                 Segment(                                | |\n| |                                     '\\u2139 Using bundled templates from ',  | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'cyan',                     | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=6                    | |\n| |                                         )                               | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment('\\n'),                          | |\n| |                                 Segment(                                | |\n| |                                     'C:\\\\Users\\\\Robert\\\\Documents\\\\Pro\u2026 | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'cyan',                     | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=6                    | |\n| |                                         )                               | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment('\\n')                           | |\n| |                             ]                                           | |\n| |                    fileno = 1                                           | |\n| |                      self = <console width=79 None>                     | |\n| | use_legacy_windows_render = True                                        | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_windows_renderer.py:17 in |\n| legacy_windows_render                                                       |\n|                                                                             |\n|   14     for text, style, control in buffer:                                |\n|   15         if not control:                                                |\n|   16             if style:                                                  |\n| > 17                 term.write_styled(text, style)                         |\n|   18             else:                                                      |\n|   19                 term.write_text(text)                                  |\n|   20         else:                                                          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer = [                                                             | |\n| |               Segment(                                                  | |\n| |                   '\\u2139 Using bundled templates from ',                    | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'cyan',                                       | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=6                                      | |\n| |                       )                                                 | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment('\\n'),                                            | |\n| |               Segment(                                                  | |\n| |                   'C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\improved-sd\u2026 | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'cyan',                                       | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=6                                      | |\n| |                       )                                                 | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment('\\n')                                             | |\n| |           ]                                                             | |\n| | control = None                                                          | |\n| |   style = Style(color=Color('cyan', ColorType.STANDARD, number=6))      | |\n| |    term = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x0000017D20510D70>                                           | |\n| |    text = '\\u2139 Using bundled templates from '                             | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_win32_console.py:441 in   |\n| write_styled                                                                |\n|                                                                             |\n|   438         SetConsoleTextAttribute(                                      |\n|   439             self._handle, attributes=ctypes.c_ushort(fore | (back <<  |\n|   440         )                                                             |\n| > 441         self.write_text(text)                                         |\n|   442         SetConsoleTextAttribute(self._handle, attributes=self._defaul |\n|   443                                                                       |\n|   444     def move_cursor_to(self, new_position: WindowsCoordinates) -> Non |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |    back = 0                                                             | |\n| | bgcolor = None                                                          | |\n| |   color = Color('cyan', ColorType.STANDARD, number=6)                   | |\n| |    fore = 3                                                             | |\n| |    self = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x0000017D20510D70>                                           | |\n| |   style = Style(color=Color('cyan', ColorType.STANDARD, number=6))      | |\n| |    text = '\\u2139 Using bundled templates from '                             | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_win32_console.py:402 in   |\n| write_text                                                                  |\n|                                                                             |\n|   399         Args:                                                         |\n|   400             text (str): The text to write to the console              |\n|   401         \"\"\"                                                           |\n| > 402         self.write(text)                                              |\n|   403         self.flush()                                                  |\n|   404                                                                       |\n|   405     def write_styled(self, text: str, style: Style) -> None:          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | self = <rich._win32_console.LegacyWindowsTerm object at                 | |\n| |        0x0000017D20510D70>                                              | |\n| | text = '\\u2139 Using bundled templates from '                                | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\encodings\\cp1252.py:19 in encode              |\n|                                                                             |\n|    16                                                                       |\n|    17 class IncrementalEncoder(codecs.IncrementalEncoder):                  |\n|    18     def encode(self, input, final=False):                             |\n| >  19         return codecs.charmap_encode(input,self.errors,encoding_table |\n|    20                                                                       |\n|    21 class IncrementalDecoder(codecs.IncrementalDecoder):                  |\n|    22     def decode(self, input, final=False):                             |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | final = False                                                           | |\n| | input = '\\u2139 Using bundled templates from '                               | |\n| |  self = <encodings.cp1252.IncrementalEncoder object at                  | |\n| |         0x0000017D1CCA4AD0>                                             | |\n| +-------------------------------------------------------------------------+ |\n+-----------------------------------------------------------------------------+\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u2139' in position\n0: character maps to <undefined>\n\nDuring handling of the above exception, another exception occurred:\n\n+--------------------- Traceback (most recent call last) ---------------------+\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:177 |\n| 8 in init                                                                   |\n|                                                                             |\n|   1775         console.print(\"[green][OK][/green] Setup complete\")          |\n|   1776                                                                      |\n|   1777     except Exception as e:                                           |\n| > 1778         console.print(f\"[red][ERROR][/red] Error: {e}\")              |\n|   1779         if not here and project_name and project_path.exists():      |\n|   1780             shutil.rmtree(project_path)                              |\n|   1781         raise typer.Exit(1)                                          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |           ai_tools = 'github-copilot'                                   | |\n| |   ai_tools_display = 'GitHub Copilot'                                   | |\n| |           app_type = 'mcp-server'                                       | |\n| |     existing_items = []                                                 | |\n| |       file_tracker = <__main__.FileTracker object at                    | |\n| |                      0x0000017D20473A10>                                | |\n| |              force = True                                               | |\n| |     force_download = False                                              | |\n| |               here = True                                               | |\n| | ignore_agent_tools = False                                              | |\n| |      invalid_tools = []                                                 | |\n| |            offline = True                                               | |\n| |       project_name = 'baseline_test_z1xzshh2'                           | |\n| |       project_path = WindowsPath('C:/Users/Robert/AppData/Local/Temp/b\u2026 | |\n| |  selected_ai_tools = ['github-copilot']                                 | |\n| |  selected_app_type = 'mcp-server'                                       | |\n| |      template_repo = None                                               | |\n| |         tool_names = ['GitHub Copilot']                                 | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:1678 in print   |\n|                                                                             |\n|   1675                 overflow = \"ignore\"                                  |\n|   1676             crop = False                                             |\n|   1677         render_hooks = self._render_hooks[:]                         |\n| > 1678         with self:                                                   |\n|   1679             renderables = self._collect_renderables(                 |\n|   1680                 objects,                                             |\n|   1681                 sep,                                                 |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer_extend = <built-in method extend of list object at              | |\n| |                  0x0000017D203E7380>                                    | |\n| |           crop = True                                                   | |\n| |          emoji = None                                                   | |\n| |            end = '\\n'                                                   | |\n| |         extend = <built-in method extend of list object at              | |\n| |                  0x0000017D20541A80>                                    | |\n| |         height = None                                                   | |\n| |      highlight = None                                                   | |\n| |        justify = None                                                   | |\n| |           line = [                                                      | |\n| |                      Segment('character maps to ', Style()),            | |\n| |                      Segment('<', Style(bold=True)),                    | |\n| |                      Segment(                                           | |\n| |                          'undefined',                                   | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'bright_magenta',                      | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=13                              | |\n| |                              ),                                         | |\n| |                              bold=True                                  | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment('>', Style(bold=True)),                    | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |         markup = None                                                   | |\n| | new_line_start = False                                                  | |\n| |   new_segments = [                                                      | |\n| |                      Segment(                                           | |\n| |                          '[',                                           | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'red',                                 | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=1                               | |\n| |                              ),                                         | |\n| |                              bold=True                                  | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(                                           | |\n| |                          'ERROR',                                       | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'red',                                 | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=1                               | |\n| |                              )                                          | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(                                           | |\n| |                          ']',                                           | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'red',                                 | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=1                               | |\n| |                              ),                                         | |\n| |                              bold=True                                  | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(' Error: ', Style()),                      | |\n| |                      Segment(                                           | |\n| |                          \"'charmap'\",                                   | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'green',                               | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=2                               | |\n| |                              ),                                         | |\n| |                              bold=False,                                | |\n| |                              italic=False                               | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(                                           | |\n| |                          \" codec can't encode character \",              | |\n| |                          Style()                                        | |\n| |                      ),                                                 | |\n| |                      Segment(                                           | |\n| |                          \"'\\\\u2139'\",                                   | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'green',                               | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=2                               | |\n| |                              ),                                         | |\n| |                              bold=False,                                | |\n| |                              italic=False                               | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(' in position ', Style()),                 | |\n| |                      Segment(                                           | |\n| |                          '0',                                           | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'cyan',                                | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=6                               | |\n| |                              ),                                         | |\n| |                              bold=True,                                 | |\n| |                              italic=False                               | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(': \\ncharacter maps to ', Style()),        | |\n| |                      ... +4                                             | |\n| |                  ]                                                      | |\n| |        no_wrap = None                                                   | |\n| |        objects = (                                                      | |\n| |                      \"[red][ERROR][/red] Error: 'charmap' codec can't   | |\n| |                  encode character '\\\\u2139' in pos\"+38,                 | |\n| |                  )                                                      | |\n| |       overflow = None                                                   | |\n| |         render = <bound method Console.render of <console width=79      | |\n| |                  None>>                                                 | |\n| |   render_hooks = []                                                     | |\n| | render_options = ConsoleOptions(                                        | |\n| |                      size=ConsoleDimensions(width=79, height=25),       | |\n| |                      legacy_windows=True,                               | |\n| |                      min_width=1,                                       | |\n| |                      max_width=79,                                      | |\n| |                      is_terminal=False,                                 | |\n| |                      encoding='cp1252',                                 | |\n| |                      max_height=25,                                     | |\n| |                      justify=None,                                      | |\n| |                      overflow=None,                                     | |\n| |                      no_wrap=None,                                      | |\n| |                      highlight=None,                                    | |\n| |                      markup=None,                                       | |\n| |                      height=None                                        | |\n| |                  )                                                      | |\n| |     renderable = <text \"[ERROR] Error: 'charmap' codec can't encode     | |\n| |                  character '\\\\u2139' in position 0: character maps to   | |\n| |                  <undefined>\" [Span(96, 97, 'repr.tag_start'), Span(97, | |\n| |                  106, 'repr.tag_name'), Span(106, 107, 'repr.tag_end'), | |\n| |                  Span(0, 1, 'repr.brace'), Span(6, 7, 'repr.brace'),    | |\n| |                  Span(15, 24, 'repr.str'), Span(54, 62, 'repr.str'),    | |\n| |                  Span(75, 76, 'repr.number'), Span(0, 7, 'red')] ''>    | |\n| |    renderables = [                                                      | |\n| |                      <text \"[ERROR] Error: 'charmap' codec can't encode | |\n| |                  character '\\\\u2139' in position 0: character maps to   | |\n| |                  <undefined>\" [Span(96, 97, 'repr.tag_start'), Span(97, | |\n| |                  106, 'repr.tag_name'), Span(106, 107, 'repr.tag_end'), | |\n| |                  Span(0, 1, 'repr.brace'), Span(6, 7, 'repr.brace'),    | |\n| |                  Span(15, 24, 'repr.str'), Span(54, 62, 'repr.str'),    | |\n| |                  Span(75, 76, 'repr.number'), Span(0, 7, 'red')] ''>    | |\n| |                  ]                                                      | |\n| |           self = <console width=79 None>                                | |\n| |            sep = ' '                                                    | |\n| |      soft_wrap = False                                                  | |\n| |          style = None                                                   | |\n| |          width = None                                                   | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:864 in __exit__ |\n|                                                                             |\n|    861                                                                      |\n|    862     def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any |\n|    863         \"\"\"Exit buffer context.\"\"\"                                   |\n| >  864         self._exit_buffer()                                          |\n|    865                                                                      |\n|    866     def begin_capture(self) -> None:                                 |\n|    867         \"\"\"Begin capturing console output. Call :meth:`end_capture`  |\n|                                                                             |\n| +-------------- locals ---------------+                                     |\n| |  exc_type = None                    |                                     |\n| | exc_value = None                    |                                     |\n| |      self = <console width=79 None> |                                     |\n| | traceback = None                    |                                     |\n| +-------------------------------------+                                     |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:822 in          |\n| _exit_buffer                                                                |\n|                                                                             |\n|    819     def _exit_buffer(self) -> None:                                  |\n|    820         \"\"\"Leave buffer context, and render content if required.\"\"\"  |\n|    821         self._buffer_index -= 1                                      |\n| >  822         self._check_buffer()                                         |\n|    823                                                                      |\n|    824     def set_live(self, live: \"Live\") -> None:                        |\n|    825         \"\"\"Set Live instance. Used by Live context manager.          |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2019 in         |\n| _check_buffer                                                               |\n|                                                                             |\n|   2016             return                                                   |\n|   2017                                                                      |\n|   2018         try:                                                         |\n| > 2019             self._write_buffer()                                     |\n|   2020         except BrokenPipeError:                                      |\n|   2021             self.on_broken_pipe()                                    |\n|   2022                                                                      |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2055 in         |\n| _write_buffer                                                               |\n|                                                                             |\n|   2052                             if self.no_color and self._color_system: |\n|   2053                                 buffer = list(Segment.remove_color(b |\n|   2054                                                                      |\n| > 2055                             legacy_windows_render(buffer, LegacyWind |\n|   2056                         else:                                        |\n|   2057                             # Either a non-std stream on legacy Wind |\n|   2058                             text = self._render_buffer(self._buffer[ |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |                    buffer = [                                           | |\n| |                                 Segment(                                | |\n| |                                     '\\u2139 Using bundled templates from ',  | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'cyan',                     | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=6                    | |\n| |                                         )                               | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment('\\n'),                          | |\n| |                                 Segment(                                | |\n| |                                     'C:\\\\Users\\\\Robert\\\\Documents\\\\Pro\u2026 | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'cyan',                     | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=6                    | |\n| |                                         )                               | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment('\\n'),                          | |\n| |                                 Segment(                                | |\n| |                                     '[',                                | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'red',                      | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=1                    | |\n| |                                         ),                              | |\n| |                                         bold=True                       | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment(                                | |\n| |                                     'ERROR',                            | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'red',                      | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=1                    | |\n| |                                         )                               | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment(                                | |\n| |                                     ']',                                | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'red',                      | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=1                    | |\n| |                                         ),                              | |\n| |                                         bold=True                       | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment(' Error: ', Style()),           | |\n| |                                 Segment(                                | |\n| |                                     \"'charmap'\",                        | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'green',                    | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=2                    | |\n| |                                         ),                              | |\n| |                                         bold=False,                     | |\n| |                                         italic=False                    | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment(                                | |\n| |                                     \" codec can't encode character \",   | |\n| |                                     Style()                             | |\n| |                                 ),                                      | |\n| |                                 ... +10                                 | |\n| |                             ]                                           | |\n| |                    fileno = 1                                           | |\n| |                      self = <console width=79 None>                     | |\n| | use_legacy_windows_render = True                                        | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_windows_renderer.py:17 in |\n| legacy_windows_render                                                       |\n|                                                                             |\n|   14     for text, style, control in buffer:                                |\n|   15         if not control:                                                |\n|   16             if style:                                                  |\n| > 17                 term.write_styled(text, style)                         |\n|   18             else:                                                      |\n|   19                 term.write_text(text)                                  |\n|   20         else:                                                          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer = [                                                             | |\n| |               Segment(                                                  | |\n| |                   '\\u2139 Using bundled templates from ',                    | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'cyan',                                       | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=6                                      | |\n| |                       )                                                 | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment('\\n'),                                            | |\n| |               Segment(                                                  | |\n| |                   'C:\\\\Users\\\\Robert\\\\Documents\\\\Projects\\\\improved-sd\u2026 | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'cyan',                                       | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=6                                      | |\n| |                       )                                                 | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment('\\n'),                                            | |\n| |               Segment(                                                  | |\n| |                   '[',                                                  | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'red',                                        | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=1                                      | |\n| |                       ),                                                | |\n| |                       bold=True                                         | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment(                                                  | |\n| |                   'ERROR',                                              | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'red',                                        | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=1                                      | |\n| |                       )                                                 | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment(                                                  | |\n| |                   ']',                                                  | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'red',                                        | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=1                                      | |\n| |                       ),                                                | |\n| |                       bold=True                                         | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment(' Error: ', Style()),                             | |\n| |               Segment(                                                  | |\n| |                   \"'charmap'\",                                          | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'green',                                      | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=2                                      | |\n| |                       ),                                                | |\n| |                       bold=False,                                       | |\n| |                       italic=False                                      | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment(\" codec can't encode character \", Style()),       | |\n| |               ... +10                                                   | |\n| |           ]                                                             | |\n| | control = None                                                          | |\n| |   style = Style(color=Color('cyan', ColorType.STANDARD, number=6))      | |\n| |    term = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x0000017D205104B0>                                           | |\n| |    text = '\\u2139 Using bundled templates from '                             | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_win32_console.py:441 in   |\n| write_styled                                                                |\n|                                                                             |\n|   438         SetConsoleTextAttribute(                                      |\n|   439             self._handle, attributes=ctypes.c_ushort(fore | (back <<  |\n|   440         )                                                             |\n| > 441         self.write_text(text)                                         |\n|   442         SetConsoleTextAttribute(self._handle, attributes=self._defaul |\n|   443                                                                       |\n|   444     def move_cursor_to(self, new_position: WindowsCoordinates) -> Non |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |    back = 0                                                             | |\n| | bgcolor = None                                                          | |\n| |   color = Color('cyan', ColorType.STANDARD, number=6)                   | |\n| |    fore = 3                                                             | |\n| |    self = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x0000017D205104B0>                                           | |\n| |   style = Style(color=Color('cyan', ColorType.STANDARD, number=6))      | |\n| |    text = '\\u2139 Using bundled templates from '                             | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_win32_console.py:402 in   |\n| write_text                                                                  |\n|                                                                             |\n|   399         Args:                                                         |\n|   400             text (str): The text to write to the console              |\n|   401         \"\"\"                                                           |\n| > 402         self.write(text)                                              |\n|   403         self.flush()                                                  |\n|   404                                                                       |\n|   405     def write_styled(self, text: str, style: Style) -> None:          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | self = <rich._win32_console.LegacyWindowsTerm object at                 | |\n| |        0x0000017D205104B0>                                              | |\n| | text = '\\u2139 Using bundled templates from '                                | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\encodings\\cp1252.py:19 in encode              |\n|                                                                             |\n|    16                                                                       |\n|    17 class IncrementalEncoder(codecs.IncrementalEncoder):                  |\n|    18     def encode(self, input, final=False):                             |\n| >  19         return codecs.charmap_encode(input,self.errors,encoding_table |\n|    20                                                                       |\n|    21 class IncrementalDecoder(codecs.IncrementalDecoder):                  |\n|    22     def decode(self, input, final=False):                             |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | final = False                                                           | |\n| | input = '\\u2139 Using bundled templates from '                               | |\n| |  self = <encodings.cp1252.IncrementalEncoder object at                  | |\n| |         0x0000017D1CCA4AD0>                                             | |\n| +-------------------------------------------------------------------------+ |\n+-----------------------------------------------------------------------------+\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u2139' in position\n0: character maps to <undefined>\n",
      "execution_time": 30.335551261901855,
      "memory_peak_mb": 48.9921875,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test_z1xzshh2",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "init_no_args_no_here": {
      "command": [
        "init"
      ],
      "exit_code": 1,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\n\n",
      "stderr": "+--------------------- Traceback (most recent call last) ---------------------+\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:172 |\n| 2 in init                                                                   |\n|                                                                             |\n|   1719             raise typer.Exit(1)                                      |\n|   1720         selected_app_type = app_type                                 |\n|   1721     else:                                                            |\n| > 1722         selected_app_type = select_app_type()                        |\n|   1723                                                                      |\n|   1724     # AI tools selection                                             |\n|   1725     if ai_tools:                                                     |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |           ai_tools = None                                               | |\n| |           app_type = None                                               | |\n| |     existing_items = []                                                 | |\n| |              force = False                                              | |\n| |     force_download = False                                              | |\n| |               here = True                                               | |\n| | ignore_agent_tools = False                                              | |\n| |            offline = False                                              | |\n| |       project_name = 'baseline_test_5x684i1o'                           | |\n| |       project_path = WindowsPath('C:/Users/Robert/AppData/Local/Temp/b\u2026 | |\n| |      template_repo = None                                               | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:452 |\n| in select_app_type                                                          |\n|                                                                             |\n|    449                                                                      |\n|    450 def select_app_type() -> str:                                        |\n|    451     \"\"\"Interactive app type selection with fallback to simple prompt |\n| >  452     console.print(\"\\n\\U0001f527 What kind of app are you building?\")         |\n|    453                                                                      |\n|    454     # Use simple numbered selection to avoid terminal compatibility  |\n|    455     option_keys = list(APP_TYPES.keys())                             |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:1678 in print   |\n|                                                                             |\n|   1675                 overflow = \"ignore\"                                  |\n|   1676             crop = False                                             |\n|   1677         render_hooks = self._render_hooks[:]                         |\n| > 1678         with self:                                                   |\n|   1679             renderables = self._collect_renderables(                 |\n|   1680                 objects,                                             |\n|   1681                 sep,                                                 |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer_extend = <built-in method extend of list object at              | |\n| |                  0x000002DD87B09880>                                    | |\n| |           crop = True                                                   | |\n| |          emoji = None                                                   | |\n| |            end = '\\n'                                                   | |\n| |         extend = <built-in method extend of list object at              | |\n| |                  0x000002DD8818CDC0>                                    | |\n| |         height = None                                                   | |\n| |      highlight = None                                                   | |\n| |        justify = None                                                   | |\n| |           line = [                                                      | |\n| |                      Segment('\\U0001f527 What kind of app are you building?'),  | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |         markup = None                                                   | |\n| | new_line_start = False                                                  | |\n| |   new_segments = [                                                      | |\n| |                      Segment(                                           | |\n| |                          '\\n\\U0001f527 What kind of app are you building?'      | |\n| |                      ),                                                 | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |        no_wrap = None                                                   | |\n| |        objects = ('\\n\\U0001f527 What kind of app are you building?',)           | |\n| |       overflow = None                                                   | |\n| |         render = <bound method Console.render of <console width=79      | |\n| |                  None>>                                                 | |\n| |   render_hooks = []                                                     | |\n| | render_options = ConsoleOptions(                                        | |\n| |                      size=ConsoleDimensions(width=79, height=25),       | |\n| |                      legacy_windows=True,                               | |\n| |                      min_width=1,                                       | |\n| |                      max_width=79,                                      | |\n| |                      is_terminal=False,                                 | |\n| |                      encoding='cp1252',                                 | |\n| |                      max_height=25,                                     | |\n| |                      justify=None,                                      | |\n| |                      overflow=None,                                     | |\n| |                      no_wrap=None,                                      | |\n| |                      highlight=None,                                    | |\n| |                      markup=None,                                       | |\n| |                      height=None                                        | |\n| |                  )                                                      | |\n| |     renderable = <text '\\n\\U0001f527 What kind of app are you building?' [] ''> | |\n| |    renderables = [                                                      | |\n| |                      <text '\\n\\U0001f527 What kind of app are you building?' [\u2026 | |\n| |                  ''>                                                    | |\n| |                  ]                                                      | |\n| |           self = <console width=79 None>                                | |\n| |            sep = ' '                                                    | |\n| |      soft_wrap = False                                                  | |\n| |          style = None                                                   | |\n| |          width = None                                                   | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:864 in __exit__ |\n|                                                                             |\n|    861                                                                      |\n|    862     def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any |\n|    863         \"\"\"Exit buffer context.\"\"\"                                   |\n| >  864         self._exit_buffer()                                          |\n|    865                                                                      |\n|    866     def begin_capture(self) -> None:                                 |\n|    867         \"\"\"Begin capturing console output. Call :meth:`end_capture`  |\n|                                                                             |\n| +-------------- locals ---------------+                                     |\n| |  exc_type = None                    |                                     |\n| | exc_value = None                    |                                     |\n| |      self = <console width=79 None> |                                     |\n| | traceback = None                    |                                     |\n| +-------------------------------------+                                     |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:822 in          |\n| _exit_buffer                                                                |\n|                                                                             |\n|    819     def _exit_buffer(self) -> None:                                  |\n|    820         \"\"\"Leave buffer context, and render content if required.\"\"\"  |\n|    821         self._buffer_index -= 1                                      |\n| >  822         self._check_buffer()                                         |\n|    823                                                                      |\n|    824     def set_live(self, live: \"Live\") -> None:                        |\n|    825         \"\"\"Set Live instance. Used by Live context manager.          |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2019 in         |\n| _check_buffer                                                               |\n|                                                                             |\n|   2016             return                                                   |\n|   2017                                                                      |\n|   2018         try:                                                         |\n| > 2019             self._write_buffer()                                     |\n|   2020         except BrokenPipeError:                                      |\n|   2021             self.on_broken_pipe()                                    |\n|   2022                                                                      |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2055 in         |\n| _write_buffer                                                               |\n|                                                                             |\n|   2052                             if self.no_color and self._color_system: |\n|   2053                                 buffer = list(Segment.remove_color(b |\n|   2054                                                                      |\n| > 2055                             legacy_windows_render(buffer, LegacyWind |\n|   2056                         else:                                        |\n|   2057                             # Either a non-std stream on legacy Wind |\n|   2058                             text = self._render_buffer(self._buffer[ |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |                    buffer = [                                           | |\n| |                                 Segment('\\n'),                          | |\n| |                                 Segment(                                | |\n| |                                     '\\U0001f527 What kind of app are you        | |\n| |                             building?'                                  | |\n| |                                 ),                                      | |\n| |                                 Segment('\\n')                           | |\n| |                             ]                                           | |\n| |                    fileno = 1                                           | |\n| |                      self = <console width=79 None>                     | |\n| | use_legacy_windows_render = True                                        | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_windows_renderer.py:19 in |\n| legacy_windows_render                                                       |\n|                                                                             |\n|   16             if style:                                                  |\n|   17                 term.write_styled(text, style)                         |\n|   18             else:                                                      |\n| > 19                 term.write_text(text)                                  |\n|   20         else:                                                          |\n|   21             control_codes: Sequence[ControlCode] = control             |\n|   22             for control_code in control_codes:                         |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer = [                                                             | |\n| |               Segment('\\n'),                                            | |\n| |               Segment('\\U0001f527 What kind of app are you building?'),         | |\n| |               Segment('\\n')                                             | |\n| |           ]                                                             | |\n| | control = None                                                          | |\n| |   style = None                                                          | |\n| |    term = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x000002DD88096C50>                                           | |\n| |    text = '\\U0001f527 What kind of app are you building?'                       | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_win32_console.py:402 in   |\n| write_text                                                                  |\n|                                                                             |\n|   399         Args:                                                         |\n|   400             text (str): The text to write to the console              |\n|   401         \"\"\"                                                           |\n| > 402         self.write(text)                                              |\n|   403         self.flush()                                                  |\n|   404                                                                       |\n|   405     def write_styled(self, text: str, style: Style) -> None:          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | self = <rich._win32_console.LegacyWindowsTerm object at                 | |\n| |        0x000002DD88096C50>                                              | |\n| | text = '\\U0001f527 What kind of app are you building?'                          | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\encodings\\cp1252.py:19 in encode              |\n|                                                                             |\n|    16                                                                       |\n|    17 class IncrementalEncoder(codecs.IncrementalEncoder):                  |\n|    18     def encode(self, input, final=False):                             |\n| >  19         return codecs.charmap_encode(input,self.errors,encoding_table |\n|    20                                                                       |\n|    21 class IncrementalDecoder(codecs.IncrementalDecoder):                  |\n|    22     def decode(self, input, final=False):                             |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | final = False                                                           | |\n| | input = '\\U0001f527 What kind of app are you building?'                         | |\n| |  self = <encodings.cp1252.IncrementalEncoder object at                  | |\n| |         0x000002DD84994AD0>                                             | |\n| +-------------------------------------------------------------------------+ |\n+-----------------------------------------------------------------------------+\nUnicodeEncodeError: 'charmap' codec can't encode character '\\U0001f527' in \nposition 0: character maps to <undefined>\n",
      "execution_time": 30.252810955047607,
      "memory_peak_mb": 47.0390625,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test_5x684i1o",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "init_invalid_app_type": {
      "command": [
        "init",
        "--app-type",
        "invalid-type",
        "--force",
        "--offline",
        "--ai-tools",
        "github-copilot"
      ],
      "exit_code": 1,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\nError:  Invalid app type 'invalid-type'. Choose from: mcp-server, python-cli\n",
      "stderr": "",
      "execution_time": 0.7118868827819824,
      "memory_peak_mb": 41.66015625,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test_zhjfmwqb",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "init_invalid_ai_tool": {
      "command": [
        "init",
        "--ai-tools",
        "invalid-tool",
        "--force",
        "--offline",
        "--app-type",
        "python-cli"
      ],
      "exit_code": 1,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\nError:  Invalid AI tool(s): invalid-tool. Choose from: github-copilot, claude, \ncursor, gemini\n",
      "stderr": "",
      "execution_time": 0.8150918483734131,
      "memory_peak_mb": 40.67578125,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test_szz_3tfi",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    }
  },
  "delete_behaviors": {
    "delete_help": {
      "command": [
        "delete",
        "--help"
      ],
      "exit_code": 0,
      "stdout": "                                                                               \n Usage: improved_sdd_cli.py delete [OPTIONS] [APP_TYPE]                        \n                                                                               \n Delete Improved-SDD templates for a specific app type.                        \n                                                                               \n This command will: 1. Identify files installed for the specified app type 2.  \n Show what will be deleted 3. Require confirmation (unless --force is used) 4. \n Delete the files                                                              \n Examples:     improved-sdd delete mcp-server     improved-sdd delete          \n python-cli --force                                                            \n                                                                               \n+- Arguments -----------------------------------------------------------------+\n|   app_type      [APP_TYPE]  App type to delete files for: mcp-server,       |\n|                             python-cli                                      |\n+-----------------------------------------------------------------------------+\n+- Options -------------------------------------------------------------------+\n| --force          Skip confirmation prompt                                   |\n| --help           Show this message and exit.                                |\n+-----------------------------------------------------------------------------+\n\n",
      "stderr": "",
      "execution_time": 0.9096968173980713,
      "memory_peak_mb": 43.1015625,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test__25_se5a",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "delete_mcp_server": {
      "command": [
        "delete",
        "mcp-server",
        "--force"
      ],
      "exit_code": 0,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\nNo files found for app type 'mcp-server'\n",
      "stderr": "",
      "execution_time": 0.816697359085083,
      "memory_peak_mb": 41.95703125,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test__25_se5a",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "delete_python_cli": {
      "command": [
        "delete",
        "python-cli",
        "--force"
      ],
      "exit_code": 0,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\nNo files found for app type 'python-cli'\n",
      "stderr": "",
      "execution_time": 0.7139742374420166,
      "memory_peak_mb": 40.70703125,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test__25_se5a",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "delete_invalid_type": {
      "command": [
        "delete",
        "invalid-type",
        "--force"
      ],
      "exit_code": 1,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\nError:  Invalid app type 'invalid-type'. Choose from: mcp-server, python-cli\n",
      "stderr": "",
      "execution_time": 0.7114825248718262,
      "memory_peak_mb": 41.92578125,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test__25_se5a",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    },
    "delete_no_args": {
      "command": [
        "delete"
      ],
      "exit_code": 1,
      "stdout": "\n. _   __  __ _____ _____    _____       _______ _____        _____ _____  _____\n | | |      |  __ \\|  __ \\ / __ \\ \\    / /  ___|  __ \\      / ____|  __ \\|  __ \n\\\n | | | |\\/| | |__) | |__) | |  | \\ \\  / /| |__ | |  | |____| (___ | |  | | |  |\n|\n | | | |  | |  ___/|  _  /| |  | |\\ \\/ / |  __|| |  | |_____\\___ \\| |  | | |  |\n|\n | | | |  | | |    | | \\ \\| |__| | \\  /  | |___| |__| |     ____) | |__| | |__|\n|\n |_| |_|  | |_|    |_|  \\_\\\\____/   \\/   |_____|_____/     \n|_____/|_____/|_____/\nSpec-Driven Development for GitHub Copilot (soon more: Cursor, Claude, Gemini)\n\n\n",
      "stderr": "+--------------------- Traceback (most recent call last) ---------------------+\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:186 |\n| 2 in delete                                                                 |\n|                                                                             |\n|   1859             raise typer.Exit(1)                                      |\n|   1860         selected_app_type = app_type                                 |\n|   1861     else:                                                            |\n| > 1862         selected_app_type = select_app_type()                        |\n|   1863                                                                      |\n|   1864     # Get project path (current directory)                           |\n|   1865     project_path = Path.cwd()                                        |\n|                                                                             |\n| +----- locals -----+                                                        |\n| | app_type = None  |                                                        |\n| |    force = False |                                                        |\n| +------------------+                                                        |\n|                                                                             |\n| C:\\Users\\Robert\\Documents\\Projects\\improved-sdd\\src\\improved_sdd_cli.py:452 |\n| in select_app_type                                                          |\n|                                                                             |\n|    449                                                                      |\n|    450 def select_app_type() -> str:                                        |\n|    451     \"\"\"Interactive app type selection with fallback to simple prompt |\n| >  452     console.print(\"\\n\\U0001f527 What kind of app are you building?\")         |\n|    453                                                                      |\n|    454     # Use simple numbered selection to avoid terminal compatibility  |\n|    455     option_keys = list(APP_TYPES.keys())                             |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:1678 in print   |\n|                                                                             |\n|   1675                 overflow = \"ignore\"                                  |\n|   1676             crop = False                                             |\n|   1677         render_hooks = self._render_hooks[:]                         |\n| > 1678         with self:                                                   |\n|   1679             renderables = self._collect_renderables(                 |\n|   1680                 objects,                                             |\n|   1681                 sep,                                                 |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer_extend = <built-in method extend of list object at              | |\n| |                  0x0000021D8EFE5640>                                    | |\n| |           crop = True                                                   | |\n| |          emoji = None                                                   | |\n| |            end = '\\n'                                                   | |\n| |         extend = <built-in method extend of list object at              | |\n| |                  0x0000021D9016B900>                                    | |\n| |         height = None                                                   | |\n| |      highlight = None                                                   | |\n| |        justify = None                                                   | |\n| |           line = [                                                      | |\n| |                      Segment('\\U0001f527 What kind of app are you building?'),  | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |         markup = None                                                   | |\n| | new_line_start = False                                                  | |\n| |   new_segments = [                                                      | |\n| |                      Segment(                                           | |\n| |                          '\\n\\U0001f527 What kind of app are you building?'      | |\n| |                      ),                                                 | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |        no_wrap = None                                                   | |\n| |        objects = ('\\n\\U0001f527 What kind of app are you building?',)           | |\n| |       overflow = None                                                   | |\n| |         render = <bound method Console.render of <console width=79      | |\n| |                  None>>                                                 | |\n| |   render_hooks = []                                                     | |\n| | render_options = ConsoleOptions(                                        | |\n| |                      size=ConsoleDimensions(width=79, height=25),       | |\n| |                      legacy_windows=True,                               | |\n| |                      min_width=1,                                       | |\n| |                      max_width=79,                                      | |\n| |                      is_terminal=False,                                 | |\n| |                      encoding='cp1252',                                 | |\n| |                      max_height=25,                                     | |\n| |                      justify=None,                                      | |\n| |                      overflow=None,                                     | |\n| |                      no_wrap=None,                                      | |\n| |                      highlight=None,                                    | |\n| |                      markup=None,                                       | |\n| |                      height=None                                        | |\n| |                  )                                                      | |\n| |     renderable = <text '\\n\\U0001f527 What kind of app are you building?' [] ''> | |\n| |    renderables = [                                                      | |\n| |                      <text '\\n\\U0001f527 What kind of app are you building?' [\u2026 | |\n| |                  ''>                                                    | |\n| |                  ]                                                      | |\n| |           self = <console width=79 None>                                | |\n| |            sep = ' '                                                    | |\n| |      soft_wrap = False                                                  | |\n| |          style = None                                                   | |\n| |          width = None                                                   | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:864 in __exit__ |\n|                                                                             |\n|    861                                                                      |\n|    862     def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any |\n|    863         \"\"\"Exit buffer context.\"\"\"                                   |\n| >  864         self._exit_buffer()                                          |\n|    865                                                                      |\n|    866     def begin_capture(self) -> None:                                 |\n|    867         \"\"\"Begin capturing console output. Call :meth:`end_capture`  |\n|                                                                             |\n| +-------------- locals ---------------+                                     |\n| |  exc_type = None                    |                                     |\n| | exc_value = None                    |                                     |\n| |      self = <console width=79 None> |                                     |\n| | traceback = None                    |                                     |\n| +-------------------------------------+                                     |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:822 in          |\n| _exit_buffer                                                                |\n|                                                                             |\n|    819     def _exit_buffer(self) -> None:                                  |\n|    820         \"\"\"Leave buffer context, and render content if required.\"\"\"  |\n|    821         self._buffer_index -= 1                                      |\n| >  822         self._check_buffer()                                         |\n|    823                                                                      |\n|    824     def set_live(self, live: \"Live\") -> None:                        |\n|    825         \"\"\"Set Live instance. Used by Live context manager.          |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2019 in         |\n| _check_buffer                                                               |\n|                                                                             |\n|   2016             return                                                   |\n|   2017                                                                      |\n|   2018         try:                                                         |\n| > 2019             self._write_buffer()                                     |\n|   2020         except BrokenPipeError:                                      |\n|   2021             self.on_broken_pipe()                                    |\n|   2022                                                                      |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\console.py:2055 in         |\n| _write_buffer                                                               |\n|                                                                             |\n|   2052                             if self.no_color and self._color_system: |\n|   2053                                 buffer = list(Segment.remove_color(b |\n|   2054                                                                      |\n| > 2055                             legacy_windows_render(buffer, LegacyWind |\n|   2056                         else:                                        |\n|   2057                             # Either a non-std stream on legacy Wind |\n|   2058                             text = self._render_buffer(self._buffer[ |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |                    buffer = [                                           | |\n| |                                 Segment('\\n'),                          | |\n| |                                 Segment(                                | |\n| |                                     '\\U0001f527 What kind of app are you        | |\n| |                             building?'                                  | |\n| |                                 ),                                      | |\n| |                                 Segment('\\n')                           | |\n| |                             ]                                           | |\n| |                    fileno = 1                                           | |\n| |                      self = <console width=79 None>                     | |\n| | use_legacy_windows_render = True                                        | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_windows_renderer.py:19 in |\n| legacy_windows_render                                                       |\n|                                                                             |\n|   16             if style:                                                  |\n|   17                 term.write_styled(text, style)                         |\n|   18             else:                                                      |\n| > 19                 term.write_text(text)                                  |\n|   20         else:                                                          |\n|   21             control_codes: Sequence[ControlCode] = control             |\n|   22             for control_code in control_codes:                         |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer = [                                                             | |\n| |               Segment('\\n'),                                            | |\n| |               Segment('\\U0001f527 What kind of app are you building?'),         | |\n| |               Segment('\\n')                                             | |\n| |           ]                                                             | |\n| | control = None                                                          | |\n| |   style = None                                                          | |\n| |    term = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x0000021D90056650>                                           | |\n| |    text = '\\U0001f527 What kind of app are you building?'                       | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\site-packages\\rich\\_win32_console.py:402 in   |\n| write_text                                                                  |\n|                                                                             |\n|   399         Args:                                                         |\n|   400             text (str): The text to write to the console              |\n|   401         \"\"\"                                                           |\n| > 402         self.write(text)                                              |\n|   403         self.flush()                                                  |\n|   404                                                                       |\n|   405     def write_styled(self, text: str, style: Style) -> None:          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | self = <rich._win32_console.LegacyWindowsTerm object at                 | |\n| |        0x0000021D90056650>                                              | |\n| | text = '\\U0001f527 What kind of app are you building?'                          | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\Robert\\anaconda3\\Lib\\encodings\\cp1252.py:19 in encode              |\n|                                                                             |\n|    16                                                                       |\n|    17 class IncrementalEncoder(codecs.IncrementalEncoder):                  |\n|    18     def encode(self, input, final=False):                             |\n| >  19         return codecs.charmap_encode(input,self.errors,encoding_table |\n|    20                                                                       |\n|    21 class IncrementalDecoder(codecs.IncrementalDecoder):                  |\n|    22     def decode(self, input, final=False):                             |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | final = False                                                           | |\n| | input = '\\U0001f527 What kind of app are you building?'                         | |\n| |  self = <encodings.cp1252.IncrementalEncoder object at                  | |\n| |         0x0000021D8C8E4AD0>                                             | |\n| +-------------------------------------------------------------------------+ |\n+-----------------------------------------------------------------------------+\nUnicodeEncodeError: 'charmap' codec can't encode character '\\U0001f527' in \nposition 0: character maps to <undefined>\n",
      "execution_time": 30.28408122062683,
      "memory_peak_mb": 47.28125,
      "working_directory": "C:\\Users\\Robert\\AppData\\Local\\Temp\\baseline_test__25_se5a",
      "environment_snapshot": {
        "PATH": "C:\\Users\\Robert\\anaconda3;C:\\Users\\Robert\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Robert\\anaconda3\\Library\\usr\\bin;C:\\Users\\Robert\\anaconda3\\Library\\bin;C:\\Users\\Robert\\anaconda3\\Scripts;C:\\Users\\Robert\\anaconda3\\bin;C:\\Users\\Robert\\anaconda3\\condabin;C:\\Program Files\\Microsoft MPI\\Bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.6\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Program Files\\HP\\OMEN-Broadcast\\Common;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2024.3.1;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;c:\\Users\\Robert\\AppData\\Local\\Programs\\cursor\\resources\\app\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Program Files\\GitHub CLI;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\Robert\\.local\\bin;C:\\Users\\Robert\\AppData\\Local\\Goose\\bin;C:\\Users\\Robert\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Robert\\AppData\\Local\\Programs\\Ollama;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Robert\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\bin;C:\\Users\\Robert\\AppData\\Local\\nvm;C:\\nvm4w\\nodejs;C:\\Users\\Robert\\.lmstudio\\bin;C:\\Users\\Robert\\AppData\\Local\\Programs\\Kiro\\bin;c:\\Users\\Robert\\.vscode-insiders\\extensions\\ms-python.debugpy-2025.13.2025090502-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\github.copilot-chat\\debugCommand",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL",
        "PYTHONSTARTUP": "c:\\Users\\Robert\\AppData\\Roaming\\Code - Insiders\\User\\workspaceStorage\\9b37944cd77a94a50a71687740c564a3\\ms-python.python\\pythonrc.py",
        "PYTHON_BASIC_REPL": "1"
      }
    }
  },
  "performance": {
    "startup_time_ms": 10135.566711425781,
    "memory_usage_mb": 45.51953125,
    "import_time_ms": 102.43360201517741,
    "command_response_time_ms": {
      "help": 10141.067028045654,
      "init_help": 910.0915590922037,
      "delete_help": 911.2169742584229
    }
  }
}